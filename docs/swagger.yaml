definitions:
  CreateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  CreateUserResponse:
    properties:
      id:
        type: integer
    type: object
  Error:
    properties:
      message:
        type: string
    type: object
  GetUserByIDResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      updated_at:
        type: string
    type: object
  HealthCheckResponse:
    properties:
      status:
        type: string
    type: object
  LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  LoginResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      token:
        type: string
      user_id:
        type: integer
    type: object
  UpdateUserRequest:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /health:
    get:
      consumes:
      - application/json
      description: '- Health-Check for the API'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HealthCheckResponse'
      summary: '- Health-Check'
      tags:
      - Health-Check
  /v1/auth/login/:
    post:
      consumes:
      - application/json
      description: '- Performs user login and returns a token'
      parameters:
      - description: login to be performed
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LoginResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: '- login user'
      tags:
      - Login
  /v1/user/:
    post:
      consumes:
      - application/json
      description: Creates a user
      parameters:
      - description: User to be created
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/CreateUserResponse'
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - User
  /v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Gets a user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetUserByIDResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates a user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: User to be updated
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/UpdateUserRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
